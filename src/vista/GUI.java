/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import controlador.Alumne_controller;
import controlador.Cicle_controller;
import controlador.Curs_Controller;
import controlador.Familia_controller;
import controlador.Matricula_Controller;
import controlador.Modul_controller;
import controlador.UnitatFormativa_controller;
import exceptions.NotFoundException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.LogManager;
import java.util.logging.Logger;
import javax.persistence.NoResultException;
import javax.persistence.PersistenceException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Alumne;
import model.Cicle;
import model.Curs;
import model.Familia;
import model.Matricula;
import model.Modul;
import model.UnitatFormativa;

/**
 *
 * @author ALUMNEDAM
 */
public class GUI extends javax.swing.JFrame {

    private static final String INSERT_OK = "Inserció feta correctament";
    private static final String INSERT_FAIL = "Error al realitzar la inserció";
    private static final String MODIFICATION_OK = "Modificació feta correctament";
    private static final String MODIFICATION_FAIL = "Error al realitzar la modificació.";
    private static final String DELETE_OK = "Eliminació feta correctament";
    private static final String DELETE_FAILED = "Error al realitzar la eliminació";

    private static final String NOT_FOUND = "No s'ha trobat l'objecte";

    public GUI() {
        initComponents();
        try {
            LogManager.getLogManager().readConfiguration(new FileInputStream("log.properties"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException | SecurityException ex) {
            Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel5 = new javax.swing.JPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        idFamilia = new javax.swing.JTextField();
        nomFamilia = new javax.swing.JTextField();
        jScrollPane8 = new javax.swing.JScrollPane();
        tablaFamilia = new javax.swing.JTable();
        btnAfegirFamilia = new javax.swing.JButton();
        btnCercarTotsFamilia = new javax.swing.JButton();
        btnEliminarFamilia = new javax.swing.JButton();
        btnModificarFamilia = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jScrollPane6 = new javax.swing.JScrollPane();
        tableCicle = new javax.swing.JTable();
        idCicle = new javax.swing.JTextField();
        nomCicle = new javax.swing.JTextField();
        btnAfegirCicle = new javax.swing.JButton();
        btnCercarTotsCicle = new javax.swing.JButton();
        btnModificarCicle = new javax.swing.JButton();
        btnEliminarCicle = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        grauCicle = new javax.swing.JComboBox<>();
        jComboBoxCicleFamilia = new javax.swing.JComboBox<>();
        jButtonCicleCargarFamilias = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        idCurs = new javax.swing.JTextField();
        btnAfegirCurs = new javax.swing.JButton();
        btnCercarTotsCurs = new javax.swing.JButton();
        btnEliminarCurs = new javax.swing.JButton();
        btnModificarCurs = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        tablaCurs = new javax.swing.JTable();
        nomCurs = new javax.swing.JComboBox();
        jLabel28 = new javax.swing.JLabel();
        jComboBoxCursCicles = new javax.swing.JComboBox<>();
        jButtonCarregarCursCicles = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        nomModul = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        idModul = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        tablaModul = new javax.swing.JTable();
        btnCercarTotsModul = new javax.swing.JButton();
        btnModificarModul = new javax.swing.JButton();
        btnEliminarModul = new javax.swing.JButton();
        btnAfegirModul = new javax.swing.JButton();
        jLabel30 = new javax.swing.JLabel();
        jComboBoxModuloCiclo = new javax.swing.JComboBox<>();
        jButtonCargarCiclos = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        jLabel6 = new javax.swing.JLabel();
        nomUF = new javax.swing.JTextField();
        idUF = new javax.swing.JTextField();
        horesUF = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        tableUF = new javax.swing.JTable();
        btnCercarTotsUF = new javax.swing.JButton();
        btnAfegirUF = new javax.swing.JButton();
        btnModificarUF = new javax.swing.JButton();
        btnEliminarUF = new javax.swing.JButton();
        jLabel16 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jComboBoxUFModul = new javax.swing.JComboBox<>();
        jComboBoxUFCurs = new javax.swing.JComboBox<>();
        jComboBoxUFMatricula = new javax.swing.JComboBox<>();
        jButtonCarregarUFModul = new javax.swing.JButton();
        jButtonCarregarUFCurs = new javax.swing.JButton();
        jButtonCarregarUFMatricula = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nifAlumne = new javax.swing.JTextField();
        nomAlumne = new javax.swing.JTextField();
        cognomAlumne = new javax.swing.JTextField();
        correuAlumne = new javax.swing.JTextField();
        telefonAlumne = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAlumne = new javax.swing.JTable();
        btnCercarTotsAlumne = new javax.swing.JButton();
        btnCercarCognom = new javax.swing.JButton();
        bnCercarNifAlumne = new javax.swing.JButton();
        btnAfegirAlumne = new javax.swing.JButton();
        btnModificarAlumne = new javax.swing.JButton();
        btnEliminarAlumne = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnCercarNIFMatricula = new javax.swing.JButton();
        btnCercarCursMatricula = new javax.swing.JButton();
        btnCercarTotsMatricula = new javax.swing.JButton();
        btnCercarCicleMatricula = new javax.swing.JButton();
        btnAfegirMatricula = new javax.swing.JButton();
        btnCercarFamiliaMatricula = new javax.swing.JButton();
        btnModificarMatricula = new javax.swing.JButton();
        boxModalitatMatricula = new javax.swing.JComboBox<>();
        boxDescompteMatricula = new javax.swing.JComboBox<>();
        idMatricula = new javax.swing.JTextField();
        btnEliminarMatricula = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        tableMatricula = new javax.swing.JTable();
        jLabel27 = new javax.swing.JLabel();
        boxCurs = new javax.swing.JComboBox<>();
        jLabel25 = new javax.swing.JLabel();
        boxFamilia = new javax.swing.JComboBox<>();
        jLabel26 = new javax.swing.JLabel();
        boxCicle = new javax.swing.JComboBox<>();
        jButtonMatCargarCiclos = new javax.swing.JButton();
        jButtonMatCargarCursos = new javax.swing.JButton();
        jButtonMatCargarFamilias = new javax.swing.JButton();
        jXDatePicker = new org.jdesktop.swingx.JXDatePicker();
        jComboBoxMatAlumne = new javax.swing.JComboBox<>();
        jButtonCargarMatAlumnos = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel21.setText("ID");

        jLabel22.setText("Nom");

        idFamilia.setEditable(false);

        tablaFamilia.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nom"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane8.setViewportView(tablaFamilia);
        if (tablaFamilia.getColumnModel().getColumnCount() > 0) {
            tablaFamilia.getColumnModel().getColumn(1).setResizable(false);
        }

        btnAfegirFamilia.setText("Afegir Familia");
        btnAfegirFamilia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirFamiliaActionPerformed(evt);
            }
        });

        btnCercarTotsFamilia.setText("Cercar Tots");
        btnCercarTotsFamilia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsFamiliaActionPerformed(evt);
            }
        });

        btnEliminarFamilia.setText("Eliminar Familia");
        btnEliminarFamilia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarFamiliaActionPerformed(evt);
            }
        });

        btnModificarFamilia.setText("Modificar Familia");
        btnModificarFamilia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarFamiliaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jLabel22)
                            .addComponent(idFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(94, 94, 94)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnEliminarFamilia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAfegirFamilia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModificarFamilia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCercarTotsFamilia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 347, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel21)
                .addGap(18, 18, 18)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAfegirFamilia)
                    .addComponent(btnCercarTotsFamilia))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel22)
                .addGap(16, 16, 16)
                .addComponent(nomFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEliminarFamilia)
                    .addComponent(btnModificarFamilia))
                .addGap(120, 120, 120)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Familia", jPanel5);

        jLabel13.setText("ID");

        jLabel14.setText("Nom");

        jLabel15.setText("Grau");

        tableCicle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nom cicle", "Grau cicle", "Familia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane6.setViewportView(tableCicle);
        if (tableCicle.getColumnModel().getColumnCount() > 0) {
            tableCicle.getColumnModel().getColumn(0).setResizable(false);
            tableCicle.getColumnModel().getColumn(1).setResizable(false);
            tableCicle.getColumnModel().getColumn(2).setResizable(false);
        }

        idCicle.setEditable(false);

        btnAfegirCicle.setText("Afegir Cicle");
        btnAfegirCicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirCicleActionPerformed(evt);
            }
        });

        btnCercarTotsCicle.setText("Cercar Tots");
        btnCercarTotsCicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsCicleActionPerformed(evt);
            }
        });

        btnModificarCicle.setText("Modificar Cicle");
        btnModificarCicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCicleActionPerformed(evt);
            }
        });

        btnEliminarCicle.setText("Eliminar Cicle");
        btnEliminarCicle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCicleActionPerformed(evt);
            }
        });

        jLabel17.setText("Familia");

        grauCicle.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Medio", "Superior" }));

        jButtonCicleCargarFamilias.setText("Cargar familias");
        jButtonCicleCargarFamilias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCicleCargarFamiliasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idCicle, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(nomCicle, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel15)
                            .addComponent(jLabel17)
                            .addComponent(grauCicle, 0, 100, Short.MAX_VALUE)
                            .addComponent(jComboBoxCicleFamilia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(jButtonCicleCargarFamilias)
                        .addGap(23, 23, 23)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnModificarCicle)
                            .addComponent(btnAfegirCicle, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(75, 75, 75)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEliminarCicle, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCercarTotsCicle, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(134, 134, 134))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel17))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idCicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAfegirCicle)
                    .addComponent(btnCercarTotsCicle)
                    .addComponent(jComboBoxCicleFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCicleCargarFamilias))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEliminarCicle)
                        .addComponent(btnModificarCicle))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(nomCicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(grauCicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(188, 188, 188)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cicle", jPanel3);

        jLabel18.setText("ID");

        jLabel19.setText("Nom");

        idCurs.setEditable(false);

        btnAfegirCurs.setText("Afegir Curs");
        btnAfegirCurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirCursActionPerformed(evt);
            }
        });

        btnCercarTotsCurs.setText("Cercar Tots");
        btnCercarTotsCurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsCursActionPerformed(evt);
            }
        });

        btnEliminarCurs.setText("Eliminar Curs");
        btnEliminarCurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarCursActionPerformed(evt);
            }
        });

        btnModificarCurs.setText("Modificar Curs");
        btnModificarCurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCursActionPerformed(evt);
            }
        });

        tablaCurs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id curs", "Nom curs", "Cicle"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane7.setViewportView(tablaCurs);
        if (tablaCurs.getColumnModel().getColumnCount() > 0) {
            tablaCurs.getColumnModel().getColumn(0).setResizable(false);
            tablaCurs.getColumnModel().getColumn(1).setResizable(false);
            tablaCurs.getColumnModel().getColumn(2).setResizable(false);
        }

        nomCurs.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PRIMER", "SEGON" }));

        jLabel28.setText("Cicle");

        jButtonCarregarCursCicles.setText("Carregar cicles");
        jButtonCarregarCursCicles.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarCursCiclesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(nomCurs, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(idCurs, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                            .addComponent(jLabel28))
                        .addGap(161, 161, 161)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAfegirCurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnEliminarCurs, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModificarCurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCercarTotsCurs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(315, Short.MAX_VALUE))
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jComboBoxCursCicles, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(28, 28, 28)
                                .addComponent(jButtonCarregarCursCicles)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jLabel18)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(idCurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnAfegirCurs)
                        .addComponent(btnCercarTotsCurs)))
                .addGap(18, 18, 18)
                .addComponent(jLabel19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEliminarCurs)
                            .addComponent(btnModificarCurs)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nomCurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel28)))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxCursCicles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarregarCursCicles))
                .addGap(101, 101, 101)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Curs", jPanel4);

        jLabel24.setText("Nom modul");

        jLabel29.setText("ID");

        idModul.setEditable(false);
        idModul.setFocusable(false);

        tablaModul.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id mòdul", "Nom mòdul", "Cicle"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane9.setViewportView(tablaModul);
        if (tablaModul.getColumnModel().getColumnCount() > 0) {
            tablaModul.getColumnModel().getColumn(0).setResizable(false);
            tablaModul.getColumnModel().getColumn(1).setResizable(false);
            tablaModul.getColumnModel().getColumn(2).setResizable(false);
        }

        btnCercarTotsModul.setText("Cercar Tots");
        btnCercarTotsModul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsModulActionPerformed(evt);
            }
        });

        btnModificarModul.setText("Modificar Modul");
        btnModificarModul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarModulActionPerformed(evt);
            }
        });

        btnEliminarModul.setText("Eliminar Modul");
        btnEliminarModul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarModulActionPerformed(evt);
            }
        });

        btnAfegirModul.setText("Afegir Modul");
        btnAfegirModul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirModulActionPerformed(evt);
            }
        });

        jLabel30.setText("Ciclo");

        jButtonCargarCiclos.setText("Cargar ciclos");
        jButtonCargarCiclos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarCiclosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9)
                .addContainerGap())
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBoxModuloCiclo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel24, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nomModul, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel29, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idModul, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(306, 306, 306)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnCercarTotsModul, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnModificarModul))
                                .addGap(45, 45, 45)
                                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnEliminarModul, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAfegirModul, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel7Layout.createSequentialGroup()
                                .addGap(49, 49, 49)
                                .addComponent(jButtonCargarCiclos)))))
                .addContainerGap(154, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel29)
                .addGap(18, 18, 18)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(idModul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(8, 8, 8)
                        .addComponent(jLabel24)
                        .addGap(18, 18, 18)
                        .addComponent(nomModul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel30))
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCercarTotsModul)
                            .addComponent(btnEliminarModul))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificarModul)
                            .addComponent(btnAfegirModul))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxModuloCiclo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCargarCiclos))
                .addGap(42, 42, 42)
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(84, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Modul", jPanel7);

        label1.setText("ID");

        label2.setText("Nom");

        jLabel6.setText("Hores");

        idUF.setEditable(false);

        tableUF.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID UF", "Nom UF", "Hores", "Curs", "Mòdul", "Matricula"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tableUF);
        if (tableUF.getColumnModel().getColumnCount() > 0) {
            tableUF.getColumnModel().getColumn(0).setResizable(false);
            tableUF.getColumnModel().getColumn(1).setResizable(false);
            tableUF.getColumnModel().getColumn(2).setResizable(false);
            tableUF.getColumnModel().getColumn(3).setResizable(false);
            tableUF.getColumnModel().getColumn(4).setResizable(false);
            tableUF.getColumnModel().getColumn(5).setResizable(false);
        }

        btnCercarTotsUF.setText("Cercar Tots");
        btnCercarTotsUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsUFActionPerformed(evt);
            }
        });

        btnAfegirUF.setText("Afegir UF");
        btnAfegirUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirUFActionPerformed(evt);
            }
        });

        btnModificarUF.setText("Modificar UF");
        btnModificarUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarUFActionPerformed(evt);
            }
        });

        btnEliminarUF.setText("Eliminar per nom");
        btnEliminarUF.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarUFActionPerformed(evt);
            }
        });

        jLabel16.setText("Modul");

        jLabel20.setText("Curs");

        jLabel23.setText("Matricula");

        jButtonCarregarUFModul.setText("Carregar mòduls");
        jButtonCarregarUFModul.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarUFModulActionPerformed(evt);
            }
        });

        jButtonCarregarUFCurs.setText("Carregar cursos");
        jButtonCarregarUFCurs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarUFCursActionPerformed(evt);
            }
        });

        jButtonCarregarUFMatricula.setText("Carregar matricules");
        jButtonCarregarUFMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCarregarUFMatriculaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 820, Short.MAX_VALUE)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nomUF)
                            .addComponent(idUF, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                            .addComponent(jLabel20)
                            .addComponent(jComboBoxUFCurs, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel16))
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(horesUF, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                                            .addComponent(jComboBoxUFModul, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonCarregarUFModul)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                                .addComponent(btnCercarTotsUF)
                                                .addGap(64, 64, 64)
                                                .addComponent(btnModificarUF, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                                                .addComponent(btnAfegirUF, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnEliminarUF)))
                                        .addGap(65, 65, 65))))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jButtonCarregarUFCurs)
                                .addGap(38, 38, 38)
                                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel23)
                                    .addGroup(jPanel8Layout.createSequentialGroup()
                                        .addComponent(jComboBoxUFMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButtonCarregarUFMatricula)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(6, 6, 6)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCercarTotsUF)
                    .addComponent(btnModificarUF)
                    .addComponent(horesUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomUF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAfegirUF)
                            .addComponent(btnEliminarUF)))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxUFModul, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCarregarUFModul))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel20))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxUFCurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxUFMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCarregarUFCurs)
                    .addComponent(jButtonCarregarUFMatricula))
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Unitat formativa", jPanel8);

        jLabel1.setText("NIF");

        jLabel2.setText("Nom");

        jLabel3.setText("Cognom");

        jLabel4.setText("Correu");

        jLabel5.setText("Telefon");

        tableAlumne.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIF", "Nom", "Cognom", "Correu", "Telefon"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAlumne);
        if (tableAlumne.getColumnModel().getColumnCount() > 0) {
            tableAlumne.getColumnModel().getColumn(0).setResizable(false);
            tableAlumne.getColumnModel().getColumn(1).setResizable(false);
            tableAlumne.getColumnModel().getColumn(2).setResizable(false);
            tableAlumne.getColumnModel().getColumn(3).setResizable(false);
            tableAlumne.getColumnModel().getColumn(4).setResizable(false);
        }

        btnCercarTotsAlumne.setText("Cercar Tots");
        btnCercarTotsAlumne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsAlumneActionPerformed(evt);
            }
        });

        btnCercarCognom.setText("Cercar Cognom");
        btnCercarCognom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarCognomActionPerformed(evt);
            }
        });

        bnCercarNifAlumne.setText("Cercar NIF");
        bnCercarNifAlumne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bnCercarNifAlumneActionPerformed(evt);
            }
        });

        btnAfegirAlumne.setText("Afegir Alumne");
        btnAfegirAlumne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirAlumneActionPerformed(evt);
            }
        });

        btnModificarAlumne.setText("Modificar Alumne");
        btnModificarAlumne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarAlumneActionPerformed(evt);
            }
        });

        btnEliminarAlumne.setText("Eliminar Alumne");
        btnEliminarAlumne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAlumneActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(270, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(nomAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(cognomAlumne)
                            .addComponent(nifAlumne))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(correuAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(telefonAlumne))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnModificarAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bnCercarNifAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnCercarTotsAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnCercarCognom, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                            .addComponent(btnEliminarAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnAfegirAlumne, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(190, 190, 190))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nifAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(correuAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnCercarCognom)
                                .addComponent(bnCercarNifAlumne)))
                        .addGap(16, 16, 16)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nomAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(telefonAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cognomAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCercarTotsAlumne)
                            .addComponent(btnAfegirAlumne))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnModificarAlumne)
                            .addComponent(btnEliminarAlumne))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Alumne", jPanel2);

        jLabel7.setText("ID");

        jLabel8.setText("NIF Alumne");

        jLabel9.setText("Curs");

        jLabel11.setText("Modalitat");

        jLabel12.setText("Descompte");

        btnCercarNIFMatricula.setText("Cercar per NIF");
        btnCercarNIFMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarNIFMatriculaActionPerformed(evt);
            }
        });

        btnCercarCursMatricula.setText("Cercar per Curs");
        btnCercarCursMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarCursMatriculaActionPerformed(evt);
            }
        });

        btnCercarTotsMatricula.setText("Cercar Tots");
        btnCercarTotsMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarTotsMatriculaActionPerformed(evt);
            }
        });

        btnCercarCicleMatricula.setText("Cercar per Cicle");
        btnCercarCicleMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarCicleMatriculaActionPerformed(evt);
            }
        });

        btnAfegirMatricula.setText("Afergir Matricula");
        btnAfegirMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAfegirMatriculaActionPerformed(evt);
            }
        });

        btnCercarFamiliaMatricula.setText("Cercar per Familia");
        btnCercarFamiliaMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCercarFamiliaMatriculaActionPerformed(evt);
            }
        });

        btnModificarMatricula.setText("Modificar Matricula");
        btnModificarMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarMatriculaActionPerformed(evt);
            }
        });

        boxModalitatMatricula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Curs complet", "Uf soltes" }));

        boxDescompteMatricula.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "50", "100" }));

        idMatricula.setEditable(false);

        btnEliminarMatricula.setText("Eliminar Matricula");
        btnEliminarMatricula.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarMatriculaActionPerformed(evt);
            }
        });

        tableMatricula.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id matricula", "Nif alumne", "Data", "Modalitat", "Descompte", "Cicle", "Curs", "Familia"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane5.setViewportView(tableMatricula);
        if (tableMatricula.getColumnModel().getColumnCount() > 0) {
            tableMatricula.getColumnModel().getColumn(0).setResizable(false);
            tableMatricula.getColumnModel().getColumn(1).setResizable(false);
            tableMatricula.getColumnModel().getColumn(2).setResizable(false);
            tableMatricula.getColumnModel().getColumn(3).setResizable(false);
            tableMatricula.getColumnModel().getColumn(4).setResizable(false);
            tableMatricula.getColumnModel().getColumn(5).setResizable(false);
            tableMatricula.getColumnModel().getColumn(6).setResizable(false);
            tableMatricula.getColumnModel().getColumn(7).setResizable(false);
        }

        jLabel27.setText("Data");

        jLabel25.setText("Cicle");

        jLabel26.setText("Familia");

        jButtonMatCargarCiclos.setText("Cargar ciclos");
        jButtonMatCargarCiclos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMatCargarCiclosActionPerformed(evt);
            }
        });

        jButtonMatCargarCursos.setText("Cargar cursos");
        jButtonMatCargarCursos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMatCargarCursosActionPerformed(evt);
            }
        });

        jButtonMatCargarFamilias.setText("Cargar familias");
        jButtonMatCargarFamilias.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonMatCargarFamiliasActionPerformed(evt);
            }
        });

        jButtonCargarMatAlumnos.setText("Cargar alumnos");
        jButtonCargarMatAlumnos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCargarMatAlumnosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(idMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel27)
                            .addComponent(jLabel9)
                            .addComponent(jLabel11)
                            .addComponent(boxModalitatMatricula, 0, 100, Short.MAX_VALUE)
                            .addComponent(jXDatePicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(boxCicle, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                                        .addComponent(jButtonMatCargarCiclos)
                                        .addGap(417, 417, 417))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel25)
                                            .addGroup(jPanel6Layout.createSequentialGroup()
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(boxDescompteMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(jLabel12)
                                                    .addComponent(jLabel8)
                                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                                        .addComponent(jComboBoxMatAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(27, 27, 27)
                                                        .addComponent(jButtonCargarMatAlumnos)))
                                                .addGap(59, 59, 59)
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                        .addComponent(btnCercarCursMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(btnCercarFamiliaMatricula)
                                                        .addComponent(btnCercarCicleMatricula, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addComponent(btnEliminarMatricula))
                                                .addGap(22, 22, 22)
                                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(btnCercarTotsMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnAfegirMatricula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnModificarMatricula, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                    .addComponent(btnCercarNIFMatricula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(jLabel26)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(boxCurs, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jButtonMatCargarCursos)
                        .addGap(71, 71, 71)
                        .addComponent(boxFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jButtonMatCargarFamilias)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(boxDescompteMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxModalitatMatricula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBoxMatAlumne, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonCargarMatAlumnos))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel27)
                            .addComponent(jLabel25))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(boxCicle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonMatCargarCiclos)
                            .addComponent(jXDatePicker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCercarCursMatricula)
                            .addComponent(btnCercarNIFMatricula))
                        .addGap(20, 20, 20)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCercarTotsMatricula)
                            .addComponent(btnEliminarMatricula))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCercarFamiliaMatricula)
                            .addComponent(btnAfegirMatricula))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnCercarCicleMatricula)
                            .addComponent(btnModificarMatricula))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel26))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boxCurs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(boxFamilia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonMatCargarCursos)
                    .addComponent(jButtonMatCargarFamilias))
                .addGap(26, 26, 26)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Matricula", jPanel6);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAfegirAlumneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirAlumneActionPerformed
        String nif = nifAlumne.getText();
        String nom = nomAlumne.getText();
        String cognom = cognomAlumne.getText();
        String correu = correuAlumne.getText();
        String telefon = telefonAlumne.getText();
        Alumne_controller ac = new Alumne_controller();
        Alumne a = new Alumne(nif, nom, cognom, correu, telefon);
        ac.afegir(a);
        JOptionPane.showMessageDialog(this, INSERT_OK);
    }//GEN-LAST:event_btnAfegirAlumneActionPerformed

    private void bnCercarNifAlumneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bnCercarNifAlumneActionPerformed
        try {
            String nif = nifAlumne.getText();
            Alumne_controller ac = new Alumne_controller();
            Alumne a = ac.cercarNif(nif);
            DefaultTableModel dtm = (DefaultTableModel) tableAlumne.getModel();
            if (dtm.getRowCount() > 0) {
                dtm.removeRow(0);
            }
            dtm.addRow(new Object[]{});
            tableAlumne.getModel().setValueAt(a.getNif(), 0, 0);
            tableAlumne.getModel().setValueAt(a.getNom(), 0, 1);
            tableAlumne.getModel().setValueAt(a.getCognom(), 0, 2);
            tableAlumne.getModel().setValueAt(a.getCorreu(), 0, 3);
            tableAlumne.getModel().setValueAt(a.getTelefon(), 0, 4);
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_bnCercarNifAlumneActionPerformed

    private void btnCercarCognomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarCognomActionPerformed
        String cognom = cognomAlumne.getText();
        Alumne_controller ac = new Alumne_controller();
        List<Alumne> alumnes = ac.cercarCognom(cognom);
        DefaultTableModel dtm = (DefaultTableModel) tableAlumne.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < alumnes.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < alumnes.size(); i++) {
            dtm.addRow(new Object[]{});
            tableAlumne.getModel().setValueAt(alumnes.get(i).getNif(), i, 0);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getNom(), i, 1);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getCognom(), i, 2);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getCorreu(), i, 3);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getTelefon(), i, 4);
        }
    }//GEN-LAST:event_btnCercarCognomActionPerformed

    private void btnCercarTotsAlumneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsAlumneActionPerformed
        List<Alumne> alumnes = new ArrayList();
        Alumne_controller ac = new Alumne_controller();
        alumnes = ac.cercarTots();
        DefaultTableModel dtm = (DefaultTableModel) tableAlumne.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < alumnes.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < alumnes.size(); i++) {
            dtm.addRow(new Object[]{});
            tableAlumne.getModel().setValueAt(alumnes.get(i).getNif(), i, 0);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getNom(), i, 1);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getCognom(), i, 2);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getCorreu(), i, 3);
            tableAlumne.getModel().setValueAt(alumnes.get(i).getTelefon(), i, 4);
        }
    }//GEN-LAST:event_btnCercarTotsAlumneActionPerformed

    private void btnModificarAlumneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarAlumneActionPerformed
        try {
            String nif = nifAlumne.getText();
            String nom = nomAlumne.getText();
            String cognom = cognomAlumne.getText();
            String correu = correuAlumne.getText();
            String telefon = telefonAlumne.getText();
            Alumne_controller ac = new Alumne_controller();
            Alumne a = ac.cercarNif(nif);
            a.setNom(nom);
            a.setCognom(cognom);
            a.setCorreu(correu);
            a.setTelefon(telefon);
            ac.modificar(a);
            JOptionPane.showMessageDialog(this, MODIFICATION_OK);
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnModificarAlumneActionPerformed

    private void btnEliminarAlumneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAlumneActionPerformed
        try {
            String nif = nifAlumne.getText();
            Alumne_controller ac = new Alumne_controller();
            Alumne a = ac.cercarNif(nif);
            ac.eliminar(a);
            JOptionPane.showMessageDialog(this, DELETE_OK);
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, DELETE_FAILED);
        }
    }//GEN-LAST:event_btnEliminarAlumneActionPerformed

    private void btnAfegirUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirUFActionPerformed
        try {
            String nomuf = nomUF.getText();
            Curs_Controller cc = new Curs_Controller();
            Modul_controller mc = new Modul_controller();
            Matricula_Controller matC = new Matricula_Controller();
            UnitatFormativa_controller ufc = new UnitatFormativa_controller();
            int hores = Integer.parseInt(horesUF.getText());
            Long idCurs = Long.parseLong((String) jComboBoxUFCurs.getSelectedItem());
            String nomModul = (String) jComboBoxUFModul.getSelectedItem();
            Long idMatricula = Long.parseLong((String) jComboBoxUFMatricula.getSelectedItem());
            Curs curs = cc.cercarPerId(idCurs);
            Modul m = mc.cercarModul(nomModul);
            Matricula mat = matC.cercarMatriculaId(idMatricula);
            UnitatFormativa uf = new UnitatFormativa(nomuf, hores, curs, m, mat);
            if (ufc.afegir(uf)) {
                JOptionPane.showMessageDialog(this, INSERT_OK);
            } else {
                JOptionPane.showMessageDialog(this, INSERT_FAIL);
            }
        } catch (NumberFormatException ex) {
            JOptionPane.showMessageDialog(this, "El nombre d'hores ha de ser numeric");
        } catch (PersistenceException ex) {
            JOptionPane.showMessageDialog(this, "Error. Element duplicat");
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnAfegirUFActionPerformed

    private void btnEliminarUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarUFActionPerformed
        try {
            String nomuf = nomUF.getText();
            UnitatFormativa_controller ufc = new UnitatFormativa_controller();
            UnitatFormativa uf = ufc.cercarUF(nomuf);
            if (ufc.eliminar(uf)) {
                JOptionPane.showMessageDialog(this, DELETE_OK);
            } else {
                JOptionPane.showMessageDialog(this, DELETE_FAILED);
            }
        } catch (NoResultException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnEliminarUFActionPerformed

    private void btnModificarUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarUFActionPerformed
        try {
            String nuevoNombre = JOptionPane.showInputDialog(this, "Inserta el nou nom");
            String nomuf = nomUF.getText();
            Curs_Controller cc = new Curs_Controller();
            Modul_controller mc = new Modul_controller();
            Matricula_Controller matC = new Matricula_Controller();
            UnitatFormativa_controller ufc = new UnitatFormativa_controller();
            int hores = Integer.parseInt(horesUF.getText());
            Long idCurs = Long.parseLong((String) jComboBoxUFCurs.getSelectedItem());
            String nomModul = (String) jComboBoxUFModul.getSelectedItem();
            Long idMatricula = Long.parseLong((String) jComboBoxUFMatricula.getSelectedItem());
            Curs curs = cc.cercarPerId(idCurs);
            Modul m = mc.cercarModul(nomModul);
            Matricula mat = matC.cercarMatriculaId(idMatricula);
            UnitatFormativa uf = ufc.cercarUF(nomuf);
            uf.setNom(nuevoNombre);
            uf.setHores(hores);
            uf.setCurs(curs);
            uf.setModul(m);
            uf.setMatricula(mat);
            if (ufc.modificar(uf)) {
                JOptionPane.showMessageDialog(this, INSERT_OK);
            } else {
                JOptionPane.showMessageDialog(this, INSERT_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnModificarUFActionPerformed

    private void btnCercarTotsUFActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsUFActionPerformed
        List<UnitatFormativa> ufs = new ArrayList();
        UnitatFormativa_controller ufc = new UnitatFormativa_controller();
        ufs = ufc.cercarTots();
        DefaultTableModel dtm = (DefaultTableModel) tableUF.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < ufs.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < ufs.size(); i++) {
            dtm.addRow(new Object[]{});
            tableUF.getModel().setValueAt(ufs.get(i).getId(), i, 0);
            tableUF.getModel().setValueAt(ufs.get(i).getNom(), i, 1);
            tableUF.getModel().setValueAt(ufs.get(i).getHores(), i, 2);
            tableUF.getModel().setValueAt(ufs.get(i).getCurs().getNom().name(), i, 3);
            tableUF.getModel().setValueAt(ufs.get(i).getModul().getNom(), i, 4);
            tableUF.getModel().setValueAt(ufs.get(i).getMatricula().getIdMatricula(), i, 5);
        }
    }//GEN-LAST:event_btnCercarTotsUFActionPerformed

    private void btnAfegirCursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirCursActionPerformed
        try {
            Curs_Controller cursc = new Curs_Controller();
            String nomCicle = (String) jComboBoxCursCicles.getSelectedItem();
            Cicle_controller cc = new Cicle_controller();
            Cicle c = cc.cercarCicle(nomCicle);
            Curs curs = new Curs();
            curs.setCicleCurs(c);
            if (nomCurs.getSelectedItem().toString().equals("PRIMER")) {
                c.setNom(Curs.Nom.PRIMER.toString());
            } else {
                c.setNom(Curs.Nom.SEGON.toString());
            }
            if (cursc.afegir(curs)) {
                JOptionPane.showMessageDialog(this, INSERT_OK);
            } else {
                JOptionPane.showMessageDialog(this, INSERT_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnAfegirCursActionPerformed

    private void btnCercarTotsCursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsCursActionPerformed
        try {
            Curs_Controller cursc = new Curs_Controller();
            List<Curs> cursos = cursc.cercarTots();
            DefaultTableModel dtm = (DefaultTableModel) tablaCurs.getModel();
            if (dtm.getRowCount() > 0) {
                for (int i = 0; i < cursos.size(); i++) {
                    dtm.removeRow(i);
                }
            }
            for (int i = 0; i < cursos.size(); i++) {
                dtm.addRow(new Object[]{});
                tablaCurs.getModel().setValueAt(cursos.get(i).getId(), i, 0);
                tablaCurs.getModel().setValueAt(cursos.get(i).getNom(), i, 1);
                tablaCurs.getModel().setValueAt(cursos.get(i).getCicleCurs().getNom(), i, 2);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnCercarTotsCursActionPerformed

    private void btnAfegirModulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirModulActionPerformed
        try {
            Modul_controller mc = new Modul_controller();
            String nombre = nomModul.getText();
            String nomCicle = (String) jComboBoxModuloCiclo.getSelectedItem();
            Cicle_controller cc = new Cicle_controller();
            Cicle c = cc.cercarCicle(nomCicle);
            Modul modul = new Modul(nombre, c);
            if (mc.afegir(modul)) {
                JOptionPane.showMessageDialog(this, INSERT_OK);
            } else {
                JOptionPane.showMessageDialog(this, INSERT_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnAfegirModulActionPerformed

    private void btnAfegirFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirFamiliaActionPerformed
        String nom = nomFamilia.getText();
        Familia_controller fc = new Familia_controller();
        Familia f = new Familia(nom);
        if (fc.afegir(f)) {
            JOptionPane.showMessageDialog(this, INSERT_OK);
        } else {
            JOptionPane.showMessageDialog(this, INSERT_FAIL);
        }
    }//GEN-LAST:event_btnAfegirFamiliaActionPerformed

    private void btnCercarTotsFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsFamiliaActionPerformed
        try {
            Familia_controller fc = new Familia_controller();
            List<Familia> familias = fc.cercarTots();
            DefaultTableModel dtm = (DefaultTableModel) tablaFamilia.getModel();
            if (dtm.getRowCount() > 0) {
                for (int i = 0; i < familias.size(); i++) {
                    dtm.removeRow(i);
                }
            }
            for (int i = 0; i < familias.size(); i++) {
                dtm.addRow(new Object[]{});
                tablaFamilia.getModel().setValueAt(familias.get(i).getIdFamilia(), i, 0);
                tablaFamilia.getModel().setValueAt(familias.get(i).getNom(), i, 1);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnCercarTotsFamiliaActionPerformed

    private void btnModificarFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarFamiliaActionPerformed
        String nuevoNombre = JOptionPane.showInputDialog(this, "Inserta el nuevo nombre");
        String nom = nomFamilia.getText();
        Familia_controller fc = new Familia_controller();
        Familia f;
        f = fc.cercarFamilia(nom);
        f.setNom(nuevoNombre);
        if (fc.modificar(f)) {
            JOptionPane.showMessageDialog(this, MODIFICATION_OK);
        } else {
            JOptionPane.showMessageDialog(this, MODIFICATION_FAIL);
        }

    }//GEN-LAST:event_btnModificarFamiliaActionPerformed

    private void btnEliminarFamiliaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarFamiliaActionPerformed
        try {
            String nom = nomFamilia.getText();
            Familia_controller fc = new Familia_controller();
            Familia f;
            f = fc.cercarFamilia(nom);
            if (fc.eliminar(f)) {
                JOptionPane.showMessageDialog(this, DELETE_OK);
            } else {
                JOptionPane.showMessageDialog(this, DELETE_FAILED);
            }
        } catch (NoResultException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnEliminarFamiliaActionPerformed

    private void btnAfegirCicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirCicleActionPerformed
        String nom = nomCicle.getText();
        String nomFamilia = (String) jComboBoxCicleFamilia.getSelectedItem();
        String grau = (String) grauCicle.getSelectedItem();
        Familia_controller fc = new Familia_controller();
        Familia f = fc.cercarFamilia(nomFamilia);
        Cicle_controller cc = new Cicle_controller();
        Cicle c = new Cicle(nom, grau, f);
        if (cc.afegir(c)) {
            JOptionPane.showMessageDialog(this, INSERT_OK);
        } else {
            JOptionPane.showMessageDialog(this, INSERT_FAIL);
        }
    }//GEN-LAST:event_btnAfegirCicleActionPerformed

    private void btnCercarTotsCicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsCicleActionPerformed
        List<Cicle> ciclos = new ArrayList();
        Cicle_controller cc = new Cicle_controller();
        ciclos = cc.cercarTots();
        DefaultTableModel dtm = (DefaultTableModel) tableCicle.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < ciclos.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < ciclos.size(); i++) {
            dtm.addRow(new Object[]{});
            tableCicle.getModel().setValueAt(ciclos.get(i).getNom(), i, 0);
            tableCicle.getModel().setValueAt(ciclos.get(i).getGrau(), i, 1);
            tableCicle.getModel().setValueAt(ciclos.get(i).getFamilia().getNom(), i, 2);
        }
    }//GEN-LAST:event_btnCercarTotsCicleActionPerformed

    private void btnModificarCicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCicleActionPerformed
        try {
            String nuevoNombre = JOptionPane.showInputDialog(this, "Inserta el nuevo nombre");
            String nom = nomCicle.getText();
            String nomFamilia = (String) jComboBoxCicleFamilia.getSelectedItem();
            String grau = (String) grauCicle.getSelectedItem();
            Familia_controller fc = new Familia_controller();
            Familia f = fc.cercarFamilia(nomFamilia);
            Cicle_controller cc = new Cicle_controller();
            Cicle c = cc.cercarCicle(nom);
            c.setNom(nuevoNombre);
            c.setGrau(grau);
            c.setFamilia(f);
            cc.modificar(c);
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnModificarCicleActionPerformed

    private void btnEliminarCicleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCicleActionPerformed
        try {
            String nom = nomCicle.getText();
            Cicle_controller cc = new Cicle_controller();
            Cicle c;
            c = cc.cercarCicle(nom);
            if (cc.eliminar(c)) {
                JOptionPane.showMessageDialog(this, DELETE_OK);
            } else {
                JOptionPane.showMessageDialog(this, DELETE_FAILED);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnEliminarCicleActionPerformed

    private void btnEliminarCursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarCursActionPerformed
        try {
            String nuevaId = JOptionPane.showInputDialog(this, "Inserta la id de curso a buscar");

            Curs_Controller cursc = new Curs_Controller();
            Curs curso = cursc.cercarPerId(Long.parseLong(nuevaId));
            if (cursc.eliminar(curso)) {
                JOptionPane.showMessageDialog(this, DELETE_OK);
            } else {
                JOptionPane.showMessageDialog(this, DELETE_FAILED);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnEliminarCursActionPerformed

    private void btnModificarCursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCursActionPerformed
        try {
            String nuevaId = JOptionPane.showInputDialog(this, "Inserta la id de curso a buscar");
            String nomCicle = (String) jComboBoxCursCicles.getSelectedItem();
            Cicle_controller cc = new Cicle_controller();
            Curs_Controller cursc = new Curs_Controller();
            Curs curso = cursc.cercarPerId(Long.parseLong(nuevaId));
            Cicle ciclo = cc.cercarCicle(nomCicle);
            if (nomCurs.getSelectedItem().toString().equals(Curs.Nom.PRIMER.toString())) {
                curso.setNom(Curs.Nom.PRIMER);
            } else {
                curso.setNom(Curs.Nom.SEGON);
            }
            curso.setCicleCurs(ciclo);
            if (cursc.modificar(curso)) {
                JOptionPane.showMessageDialog(this, MODIFICATION_OK);
            } else {
                JOptionPane.showMessageDialog(this, MODIFICATION_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnModificarCursActionPerformed

    private void btnModificarModulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarModulActionPerformed
        try {
            String nuevoNombre = JOptionPane.showInputDialog(this, "Inserta un nuevo nombre");
            String nom = nomModul.getText();
            String nomCicle = (String) jComboBoxModuloCiclo.getSelectedItem();
            Modul_controller mc = new Modul_controller();
            Modul m = mc.cercarModul(nom);
            m.setNom(nuevoNombre);
            Cicle_controller cc = new Cicle_controller();
            Cicle c = cc.cercarCicle(nomCicle);
            m.setCicleModul(c);
            if (mc.modificar(m)) {
                JOptionPane.showMessageDialog(this, MODIFICATION_OK);
            } else {
                JOptionPane.showMessageDialog(this, MODIFICATION_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnModificarModulActionPerformed

    private void btnCercarTotsModulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsModulActionPerformed
        List<Modul> modulos = new ArrayList();
        Modul_controller mc = new Modul_controller();
        modulos = mc.cercarTots();
        DefaultTableModel dtm = (DefaultTableModel) tablaModul.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < modulos.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < modulos.size(); i++) {
            dtm.addRow(new Object[]{});
            tablaModul.getModel().setValueAt(modulos.get(i).getId(), i, 0);
            tablaModul.getModel().setValueAt(modulos.get(i).getNom(), i, 1);
            tablaModul.getModel().setValueAt(modulos.get(i).getCicleModul().getNom(), i, 2);
        }
    }//GEN-LAST:event_btnCercarTotsModulActionPerformed

    private void btnEliminarModulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarModulActionPerformed
        String nom = nomModul.getText();
        Modul_controller mc = new Modul_controller();
        Modul m = mc.cercarModul(nom);
        if (mc.eliminar(m)) {
            JOptionPane.showMessageDialog(this, DELETE_OK);
        } else {
            JOptionPane.showMessageDialog(this, DELETE_FAILED);
        }
    }//GEN-LAST:event_btnEliminarModulActionPerformed

    private void jButtonMatCargarCiclosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMatCargarCiclosActionPerformed
        //MATRICULA
        Cicle_controller cc = new Cicle_controller();
        List<Cicle> ciclos = cc.cercarTots();
        if (ciclos.size() > 0) {
            boxCicle.removeAllItems();
            for (Cicle ciclo : ciclos) {
                boxCicle.addItem(ciclo.getNom());
            }
        } else {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonMatCargarCiclosActionPerformed

    private void jButtonMatCargarCursosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMatCargarCursosActionPerformed
        try {
            Curs_Controller cu = new Curs_Controller();
            List<Curs> cursos = cu.cercarTots();
            boxCurs.removeAllItems();
            for (Curs curso : cursos) {
                boxCurs.addItem(String.valueOf(curso.getId()));
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonMatCargarCursosActionPerformed

    private void jButtonCicleCargarFamiliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCicleCargarFamiliasActionPerformed
        try {
            Familia_controller famC = new Familia_controller();
            List<Familia> familias = famC.cercarTots();
            jComboBoxCicleFamilia.removeAllItems();
            for (Familia familia : familias) {
                jComboBoxCicleFamilia.addItem(familia.getNom());
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCicleCargarFamiliasActionPerformed

    private void jButtonMatCargarFamiliasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonMatCargarFamiliasActionPerformed
        try {
            Familia_controller famC = new Familia_controller();
            List<Familia> familias = famC.cercarTots();
            boxFamilia.removeAllItems();
            for (Familia familia : familias) {
                boxFamilia.addItem(familia.getNom());
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonMatCargarFamiliasActionPerformed

    private void jButtonCarregarCursCiclesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarCursCiclesActionPerformed
        Cicle_controller cc = new Cicle_controller();
        List<Cicle> ciclos = cc.cercarTots();
        if (ciclos.size() > 0) {
            jComboBoxCursCicles.removeAllItems();
            for (Cicle ciclo : ciclos) {
                jComboBoxCursCicles.addItem(ciclo.getNom());
            }
        } else {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCarregarCursCiclesActionPerformed

    private void jButtonCargarCiclosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarCiclosActionPerformed
        Cicle_controller cc = new Cicle_controller();
        List<Cicle> ciclos = cc.cercarTots();
        if (ciclos.size() > 0) {
            jComboBoxModuloCiclo.removeAllItems();
            for (Cicle ciclo : ciclos) {
                jComboBoxModuloCiclo.addItem(ciclo.getNom());
            }
        } else {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCargarCiclosActionPerformed

    private void jButtonCarregarUFModulActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarUFModulActionPerformed
        Modul_controller mc = new Modul_controller();
        List<Modul> modulos = mc.cercarTots();
        if (modulos.size() > 0) {
            jComboBoxUFModul.removeAllItems();
            for (Modul modulo : modulos) {
                jComboBoxUFModul.addItem(modulo.getNom());
            }
        } else {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCarregarUFModulActionPerformed

    private void jButtonCarregarUFCursActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarUFCursActionPerformed
        try {
            Curs_Controller cu = new Curs_Controller();
            List<Curs> cursos = cu.cercarTots();
            jComboBoxUFCurs.removeAllItems();
            for (Curs curso : cursos) {
                jComboBoxUFCurs.addItem(String.valueOf(curso.getId()));
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCarregarUFCursActionPerformed

    private void jButtonCarregarUFMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCarregarUFMatriculaActionPerformed
        Matricula_Controller matC = new Matricula_Controller();
        List<Matricula> matriculas = matC.cercarTots();
        if (matriculas.size() > 0) {
            jComboBoxUFMatricula.removeAllItems();
            for (Matricula matricula : matriculas) {
                jComboBoxUFMatricula.addItem(String.valueOf(matricula.getIdMatricula()));
            }
        } else {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCarregarUFMatriculaActionPerformed

    private void btnAfegirMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAfegirMatriculaActionPerformed
        try {
            String nif = (String) jComboBoxMatAlumne.getSelectedItem();
            Date fecha = jXDatePicker.getDate();
            Long idCurs = Long.parseLong((String) boxCurs.getSelectedItem());
            int descompte = Integer.parseInt((String) boxDescompteMatricula.getSelectedItem());
            String modalitat = (String) boxModalitatMatricula.getSelectedItem();
            String nomCicle = (String) boxCicle.getSelectedItem();
            String nomFamilia = (String) boxFamilia.getSelectedItem();
            Alumne_controller ac = new Alumne_controller();
            Curs_Controller cc = new Curs_Controller();
            Cicle_controller cicleC = new Cicle_controller();
            Familia_controller fc = new Familia_controller();
            Matricula_Controller mc = new Matricula_Controller();
            Alumne a = ac.cercarNif(nif);
            Curs curs = cc.cercarPerId(idCurs);
            Cicle cicle = cicleC.cercarCicle(nomCicle);
            Familia fam = fc.cercarFamilia(nomFamilia);
            Matricula matricula = new Matricula(a, fecha, modalitat, descompte, cicle, curs, fam);
            if (mc.afegir(matricula)) {
                JOptionPane.showMessageDialog(this, INSERT_OK);
            } else {
                JOptionPane.showMessageDialog(this, INSERT_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnAfegirMatriculaActionPerformed

    private void jButtonCargarMatAlumnosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCargarMatAlumnosActionPerformed
        Alumne_controller ac = new Alumne_controller();
        List<Alumne> alumnos = ac.cercarTots();
        if (alumnos.size() > 0) {
            jComboBoxMatAlumne.removeAllItems();
            for (Alumne alumno : alumnos) {
                jComboBoxMatAlumne.addItem(alumno.getNif());
            }
        } else {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_jButtonCargarMatAlumnosActionPerformed

    private void btnCercarTotsMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarTotsMatriculaActionPerformed
        List<Matricula> matriculas = new ArrayList();
        Matricula_Controller mc = new Matricula_Controller();
        matriculas = mc.cercarTots();
        DefaultTableModel dtm = (DefaultTableModel) tableMatricula.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < matriculas.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < matriculas.size(); i++) {
            dtm.addRow(new Object[]{});
            tableMatricula.getModel().setValueAt(matriculas.get(i).getIdMatricula(), i, 0);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getAlumne().getNif(), i, 1);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getDate(), i, 2);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getModalitat(), i, 3);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getDescompte(), i, 4);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getCicleMatricula().getNom(), i, 5);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getCursMatricula().getNom().name(), i, 6);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getFamiliaMatricula().getNom(), i, 7);
        }
    }//GEN-LAST:event_btnCercarTotsMatriculaActionPerformed

    private void btnModificarMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarMatriculaActionPerformed
        try {
            String idMat = JOptionPane.showInputDialog(this, "Inserta la id de matricula a buscar");
            String nif = (String) jComboBoxMatAlumne.getSelectedItem();
            Date fecha = jXDatePicker.getDate();
            Long idCurs = Long.parseLong((String) boxCurs.getSelectedItem());
            int descompte = Integer.parseInt((String) boxDescompteMatricula.getSelectedItem());
            String modalitat = (String) boxModalitatMatricula.getSelectedItem();
            String nomCicle = (String) boxCicle.getSelectedItem();
            String nomFamilia = (String) boxFamilia.getSelectedItem();
            Alumne_controller ac = new Alumne_controller();
            Curs_Controller cc = new Curs_Controller();
            Cicle_controller cicleC = new Cicle_controller();
            Familia_controller fc = new Familia_controller();
            Matricula_Controller mc = new Matricula_Controller();
            Alumne a = ac.cercarNif(nif);
            Curs curs = cc.cercarPerId(idCurs);
            Cicle cicle = cicleC.cercarCicle(nomCicle);
            Familia fam = fc.cercarFamilia(nomFamilia);
            Matricula mat = mc.cercarMatriculaId(Long.parseLong(idMat));
            mat.setModalitat(modalitat);
            mat.setDate(fecha);
            mat.setCursMatricula(curs);
            mat.setDescompte(descompte);
            mat.setAlumne(a);
            mat.setCicleMatricula(cicle);
            mat.setFamiliaMatricula(fam);
            if (mc.modificar(mat)) {
                JOptionPane.showMessageDialog(this, MODIFICATION_OK);
            } else {
                JOptionPane.showMessageDialog(this, MODIFICATION_FAIL);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnModificarMatriculaActionPerformed

    private void btnEliminarMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarMatriculaActionPerformed
        String idMat = JOptionPane.showInputDialog(this, "Inserta la id de matricula a buscar");
        Matricula_Controller mc = new Matricula_Controller();
        Matricula mat = mc.cercarMatriculaId(Long.parseLong(idMat));
        if (mc.eliminar(mat)) {
            JOptionPane.showMessageDialog(this, DELETE_OK);
        } else {
            JOptionPane.showMessageDialog(this, DELETE_FAILED);
        }
    }//GEN-LAST:event_btnEliminarMatriculaActionPerformed

    private void btnCercarNIFMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarNIFMatriculaActionPerformed
        String nif = (String) jComboBoxMatAlumne.getSelectedItem();
        Matricula_Controller mc = new Matricula_Controller();
        Matricula matricula = mc.cercarPerNif(nif);
        DefaultTableModel dtm = (DefaultTableModel) tableMatricula.getModel();
        if (dtm.getRowCount() > 0) {
            dtm.removeRow(0);
        }
        dtm.addRow(new Object[]{});
        tableMatricula.getModel().setValueAt(matricula.getIdMatricula(), 0, 0);
        tableMatricula.getModel().setValueAt(matricula.getAlumne().getNif(), 0, 1);
        tableMatricula.getModel().setValueAt(matricula.getDate(), 0, 2);
        tableMatricula.getModel().setValueAt(matricula.getModalitat(), 0, 3);
        tableMatricula.getModel().setValueAt(matricula.getDescompte(), 0, 4);
        tableMatricula.getModel().setValueAt(matricula.getCicleMatricula().getNom(), 0, 5);
        tableMatricula.getModel().setValueAt(matricula.getCursMatricula().getNom().name(), 0, 6);
        tableMatricula.getModel().setValueAt(matricula.getFamiliaMatricula().getNom(), 0, 7);

    }//GEN-LAST:event_btnCercarNIFMatriculaActionPerformed

    private void btnCercarCursMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarCursMatriculaActionPerformed
        try {
            Long idCurs = Long.parseLong((String) boxCurs.getSelectedItem());
            Curs_Controller cc = new Curs_Controller();
            Curs curs = cc.cercarPerId(idCurs);
            Matricula_Controller mc = new Matricula_Controller();
            List<Matricula> matriculas = mc.cercarPerCurs(curs);
            DefaultTableModel dtm = (DefaultTableModel) tableMatricula.getModel();
            if (dtm.getRowCount() > 0) {
                for (int i = 0; i < matriculas.size(); i++) {
                    dtm.removeRow(i);
                }
            }
            for (int i = 0; i < matriculas.size(); i++) {
                dtm.addRow(new Object[]{});
                tableMatricula.getModel().setValueAt(matriculas.get(i).getIdMatricula(), i, 0);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getAlumne().getNif(), i, 1);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getDate(), i, 2);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getModalitat(), i, 3);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getDescompte(), i, 4);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getCicleMatricula().getNom(), i, 5);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getCursMatricula().getNom().name(), i, 6);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getFamiliaMatricula().getNom(), i, 7);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnCercarCursMatriculaActionPerformed

    private void btnCercarCicleMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarCicleMatriculaActionPerformed
        try {
            String nomCicle = (String) boxCicle.getSelectedItem();
            Cicle_controller cc = new Cicle_controller();
            Cicle cicle = cc.cercarCicle(nomCicle);
            Matricula_Controller mc = new Matricula_Controller();
            List<Matricula> matriculas = mc.cercarPerCicle(cicle);
            DefaultTableModel dtm = (DefaultTableModel) tableMatricula.getModel();
            if (dtm.getRowCount() > 0) {
                for (int i = 0; i < matriculas.size(); i++) {
                    dtm.removeRow(i);
                }
            }
            for (int i = 0; i < matriculas.size(); i++) {
                dtm.addRow(new Object[]{});
                tableMatricula.getModel().setValueAt(matriculas.get(i).getIdMatricula(), i, 0);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getAlumne().getNif(), i, 1);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getDate(), i, 2);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getModalitat(), i, 3);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getDescompte(), i, 4);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getCicleMatricula().getNom(), i, 5);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getCursMatricula().getNom().name(), i, 6);
                tableMatricula.getModel().setValueAt(matriculas.get(i).getFamiliaMatricula().getNom(), i, 7);
            }
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, NOT_FOUND);
        }
    }//GEN-LAST:event_btnCercarCicleMatriculaActionPerformed

    private void btnCercarFamiliaMatriculaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCercarFamiliaMatriculaActionPerformed
        String nomFamilia = (String) boxFamilia.getSelectedItem();
        Familia_controller fc = new Familia_controller();
        Familia familia = fc.cercarFamilia(nomFamilia);
        Matricula_Controller mc = new Matricula_Controller();
        List<Matricula> matriculas = mc.cercarPerFamilia(familia);
        DefaultTableModel dtm = (DefaultTableModel) tableMatricula.getModel();
        if (dtm.getRowCount() > 0) {
            for (int i = 0; i < matriculas.size(); i++) {
                dtm.removeRow(i);
            }
        }
        for (int i = 0; i < matriculas.size(); i++) {
            dtm.addRow(new Object[]{});
            tableMatricula.getModel().setValueAt(matriculas.get(i).getIdMatricula(), i, 0);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getAlumne().getNif(), i, 1);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getDate(), i, 2);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getModalitat(), i, 3);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getDescompte(), i, 4);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getCicleMatricula().getNom(), i, 5);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getCursMatricula().getNom().name(), i, 6);
            tableMatricula.getModel().setValueAt(matriculas.get(i).getFamiliaMatricula().getNom(), i, 7);
        }
    }//GEN-LAST:event_btnCercarFamiliaMatriculaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bnCercarNifAlumne;
    private javax.swing.JComboBox<String> boxCicle;
    private javax.swing.JComboBox<String> boxCurs;
    private javax.swing.JComboBox<String> boxDescompteMatricula;
    private javax.swing.JComboBox<String> boxFamilia;
    private javax.swing.JComboBox<String> boxModalitatMatricula;
    private javax.swing.JButton btnAfegirAlumne;
    private javax.swing.JButton btnAfegirCicle;
    private javax.swing.JButton btnAfegirCurs;
    private javax.swing.JButton btnAfegirFamilia;
    private javax.swing.JButton btnAfegirMatricula;
    private javax.swing.JButton btnAfegirModul;
    private javax.swing.JButton btnAfegirUF;
    private javax.swing.JButton btnCercarCicleMatricula;
    private javax.swing.JButton btnCercarCognom;
    private javax.swing.JButton btnCercarCursMatricula;
    private javax.swing.JButton btnCercarFamiliaMatricula;
    private javax.swing.JButton btnCercarNIFMatricula;
    private javax.swing.JButton btnCercarTotsAlumne;
    private javax.swing.JButton btnCercarTotsCicle;
    private javax.swing.JButton btnCercarTotsCurs;
    private javax.swing.JButton btnCercarTotsFamilia;
    private javax.swing.JButton btnCercarTotsMatricula;
    private javax.swing.JButton btnCercarTotsModul;
    private javax.swing.JButton btnCercarTotsUF;
    private javax.swing.JButton btnEliminarAlumne;
    private javax.swing.JButton btnEliminarCicle;
    private javax.swing.JButton btnEliminarCurs;
    private javax.swing.JButton btnEliminarFamilia;
    private javax.swing.JButton btnEliminarMatricula;
    private javax.swing.JButton btnEliminarModul;
    private javax.swing.JButton btnEliminarUF;
    private javax.swing.JButton btnModificarAlumne;
    private javax.swing.JButton btnModificarCicle;
    private javax.swing.JButton btnModificarCurs;
    private javax.swing.JButton btnModificarFamilia;
    private javax.swing.JButton btnModificarMatricula;
    private javax.swing.JButton btnModificarModul;
    private javax.swing.JButton btnModificarUF;
    private javax.swing.JTextField cognomAlumne;
    private javax.swing.JTextField correuAlumne;
    private javax.swing.JComboBox<String> grauCicle;
    private javax.swing.JTextField horesUF;
    private javax.swing.JTextField idCicle;
    private javax.swing.JTextField idCurs;
    private javax.swing.JTextField idFamilia;
    private javax.swing.JTextField idMatricula;
    private javax.swing.JTextField idModul;
    private javax.swing.JTextField idUF;
    private javax.swing.JButton jButtonCargarCiclos;
    private javax.swing.JButton jButtonCargarMatAlumnos;
    private javax.swing.JButton jButtonCarregarCursCicles;
    private javax.swing.JButton jButtonCarregarUFCurs;
    private javax.swing.JButton jButtonCarregarUFMatricula;
    private javax.swing.JButton jButtonCarregarUFModul;
    private javax.swing.JButton jButtonCicleCargarFamilias;
    private javax.swing.JButton jButtonMatCargarCiclos;
    private javax.swing.JButton jButtonMatCargarCursos;
    private javax.swing.JButton jButtonMatCargarFamilias;
    private javax.swing.JComboBox<String> jComboBoxCicleFamilia;
    private javax.swing.JComboBox<String> jComboBoxCursCicles;
    private javax.swing.JComboBox<String> jComboBoxMatAlumne;
    private javax.swing.JComboBox<String> jComboBoxModuloCiclo;
    private javax.swing.JComboBox<String> jComboBoxUFCurs;
    private javax.swing.JComboBox<String> jComboBoxUFMatricula;
    private javax.swing.JComboBox<String> jComboBoxUFModul;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private org.jdesktop.swingx.JXDatePicker jXDatePicker;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JTextField nifAlumne;
    private javax.swing.JTextField nomAlumne;
    private javax.swing.JTextField nomCicle;
    private javax.swing.JComboBox nomCurs;
    private javax.swing.JTextField nomFamilia;
    private javax.swing.JTextField nomModul;
    private javax.swing.JTextField nomUF;
    private javax.swing.JTable tablaCurs;
    private javax.swing.JTable tablaFamilia;
    private javax.swing.JTable tablaModul;
    private javax.swing.JTable tableAlumne;
    private javax.swing.JTable tableCicle;
    private javax.swing.JTable tableMatricula;
    private javax.swing.JTable tableUF;
    private javax.swing.JTextField telefonAlumne;
    // End of variables declaration//GEN-END:variables
}
